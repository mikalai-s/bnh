@model SceneViewModel

@{
    var sceneId = Model.SceneId;
    var linkableBricks = (sceneId == Constants.LinkableBricksSceneId);
    ViewBag.Title = linkableBricks ? "Linkable Bricks" : "Scene designer";

    this.GetStyleBundle().Include(new []
    {
        ContentUrl.Styles.Scene,
        ContentUrl.Styles.DesignScene,
        "~/Content/themes/base/jquery-ui.css"
    });
    this.GetScriptBundle().Include(new []
    {
        ContentUrl.Scripts.DesignScene
    });
}

<fieldset>
    <legend>Scene</legend>

    @Html.HiddenFor(model => sceneId)

    <div class="scene-wrapper">
        @Html.Partial(ContentUrl.Views.Scene.Partial.DesignScene, Model)
    </div>

    <div class="control-panel">
        <h3>Wall Control Panel</h3>

        <fieldset style='@(linkableBricks ? "display:none" : "display:block")'>
            <legend>Walls</legend>

            <div class="editor-label">New wall</div>
            <div class="editor-field">
                @Html.TextBox("wallTitle")
                <input id="addWallButton" type="button" value="Add Wall" />
            </div>
            <div class="editor-field">
                <label>@Html.CheckBox("lockWallsCheckbox")Lock walls</label>
            </div>
        </fieldset>

        <fieldset>
            <legend>Bricks</legend>

            <div class="editor-label">New brick</div>
            <div class="editor-field">
                @Html.TextBox("brickTitle")
                @Html.DropDownListForBrickTypes("brickType")
                <input id="addBrickButton" type="button" value="Add Brick" />
            </div>

            <div class="editor-field">
                <label>@Html.CheckBox("lockBricksCheckbox")Lock bricks</label>
            </div>
            <div class="editor-field">
                <label>@Html.CheckBox("hideBricksContentCheckbox")Hide bricks content</label>
            </div>

            @Html.ActionLink("Manage Linkable Bricks", "EditLinkable", "Scene")
        </fieldset>

        <fieldset>
            <legend>Templates</legend>

            <div class="editor-field">
                <label>@Html.CheckBoxFor(model => model.IsTemplate)Use as template with title: </label>
                @Html.TextBoxFor(model => model.Title)
            </div>

            <div class="editor-field">
                @Html.DropDownList("templateSceneId", (SelectList)ViewBag.Templates)
                <input type="button" id="applyTemplateButton" value="Apply Template" />
            </div>
        </fieldset>

        <div style='position:absolute; bottom: 0; display: @(linkableBricks ? "display:none" : "display:block")'>
            <span class="alter">
                <input type="button" id="saveSceneButton" value="Save" />
            </span>
        </div>
    </div>

</fieldset>

@{
    this.RenderStylesAndScripts();
}