@model Review

@section Scripts {
    <script>require(["review-add"])</script>
}

@{
    ViewBag.Title = "Add " + ViewBag.CommunityName + " Review";
    var ratings = Enumerable.Range(0, 11).Select(i => new { name = i.ToString(), value = i });
    var questions = (ViewBag.Questions as IEnumerable<KeyValuePair<string, string>>).ToArray();
}

<div class="page-view">
    <h2>Add @ViewBag.CommunityName Review</h2>

    @using (Html.BeginForm()) {
        @Html.HiddenFor(m => m.TargetId)

        <div class="add-review">
            <section class="rating">
                <h4>Please rate the community by following parameters:</h4>
                @for (int i = 0; i < questions.Length; i ++)
                {
                    var question = questions[i];
                    <div>
                        <label>@question.Value</label>
                        @Html.Hidden("ratings[" + i + "].key", question.Key)
                        @Html.DropDownList("ratings[" + i + "].value", new SelectList(ratings, "value", "name"), "")
                    </div>
                }
            </section>

            <section>
                <h4>And also leave us a review:</h4>
                @Html.TextAreaFor(m => m.Message)
            </section>

        </div>

        <p>
            <span class="alter"><input type="submit" value="Create" /></span>
            @Html.ActionInputLink("Cancel", "Reviews")
        </p>
    }
</div>
