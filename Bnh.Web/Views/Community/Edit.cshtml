@model Community

@{
    ViewBag.Title = Model.Name + " community";
    ViewBag.GlobalModel = Model;
    var propertiesToSkip = new List<string> { "Name", "Zone" };
    var externalProperties = ExternalProperty.Get(typeof(Community)).Where(p => !propertiesToSkip.Contains(p.Property.Name));
    var zones = ViewBag.CityZones as IEnumerable<SelectListItem>;
}

@section Styles {
    <link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" type="text/css" />
    <link href="~/Styles/MapEditor.css" rel="stylesheet" type="text/css" />
    <link href="~/Styles/CommunityEdit.css" rel="stylesheet" type="text/css" />
}

@section Scripts {
    <script>require(["community-edit"])</script>
}

<h2>@ViewBag.Title</h2>

<h4>
    @Html.ActionLink("edit scene", "EditScene", new { id = Model.UrlId })
</h4>

<div>
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Properties</legend>

            @Html.HiddenFor(model => model.CommunityId)
            @Html.HiddenFor(model => model.CityId)
            @Html.HiddenFor(model => model.GpsLocation)
            @Html.HiddenFor(model => model.GpsBounds)

            <div style="float: left;">
                <table class="properties">
                    <tr>
                        <td>@Html.LabelFor(model => model.Name)</td>
                        <td>
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.UrlId)</td>
                        <td>
                            @Html.EditorFor(model => model.UrlId)
                            @Html.ValidationMessageFor(model => model.UrlId)
                        </td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Zone, "Zone")</td>
                        <td>
                            @Html.DropDownList("Zone", zones)
                            @Html.ValidationMessageFor(model => model.Zone)
                        </td>
                    </tr>             

                    @foreach (var property in externalProperties)
                    {
                        if (property.TypeName == "Boolean")
                        {
                    <tr>
                        <td>
                            @Html.Editor(property.Property.Name)
                        </td>
                        <td>
                            @Html.Label(property.Title.ToString())
                        </td>
                    </tr>
                        }
                        else
                        {
                    <tr>
                        <td>@Html.Label(property.Title.ToString())</td>
                        <td>
                            @Html.Editor(property.Property.Name)
                            @Html.ValidationMessage(property.Property.Name)
                        </td>
                    </tr>
                        }
                    } 
                </table>
            </div>

            <div id="mapEditor" style="float: right;">
                <div id="mapCanvas" style="width: 600px; height: 600px;"></div>
            </div>

            <div style="clear: both;">
                <span class="alter">
                    <input type="submit" value="Save" />
                </span>
                @Html.ActionInputLink("View", "Details", new { id = Model.UrlId })
            </div>

        </fieldset>
    }
</div>