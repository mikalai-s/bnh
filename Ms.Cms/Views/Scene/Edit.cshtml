
@model DesignScene
@{
    var sceneId = Model.Id;
    var ownerId = Model.OwnerGuidId;
    var linkableBricks = (sceneId == Constants.LinkableBricksSceneId);
    ViewBag.Title = linkableBricks ? "Linkable Bricks" : "Scene designer";

    this.GetStyleBundle().Include(new []
    {
        "~/WebExtracted/Ms.Cms/Styles/Scene.css",
        "~/WebExtracted/Ms.Cms/Styles/DesignScene.css",
        "~/Content/themes/base/jquery-ui.css"
    });
    this.GetScriptBundle().Include(new [] { "~/WebExtracted/Ms.Cms/Scripts/DesignScene.js" });
}

<h2>@ViewBag.Title</h2>

<div class="page-view">

    <h2>
        <sup class="alter">@Html.ActionLink("edit properties", "Edit", "Community", new { id = ownerId }, null)</sup>
    </h2>

    <fieldset>
        <legend>Scene</legend>

        @Html.HiddenFor(model => sceneId)
        @Html.HiddenFor(model => ownerId)

        <div class="scene-wrapper">
            @Html.Partial("~/WebExtracted/Ms.Cms/Views/Scene/DesignScene.cshtml", Model)
        </div>

        <div class="control-panel">
            <h3>Wall Control Panel</h3>

            <fieldset style='@(linkableBricks ? "display:none" : "display:block")'>
                <legend>Walls</legend>

                <div class="editor-label">New wall</div>
                <div class="editor-field">
                    @Html.TextBox("wallTitle")
                    <input id="addWallButton" type="button" value="Add Wall" />
                </div>
                <div class="editor-field">
                    <label>@Html.CheckBox("lockWallsCheckbox")Lock walls</label>
                </div>
            </fieldset>

            <fieldset>
                <legend>Bricks</legend>

                <div class="editor-label">New brick</div>
                <div class="editor-field">
                    @Html.TextBox("brickTitle")
                    @Html.DropDownListForBrickTypes("brickType")
                    <input id="addBrickButton" type="button" value="Add Brick" />
                </div>

                <div class="editor-field">
                    <label>@Html.CheckBox("lockBricksCheckbox")Lock bricks</label>
                </div>
                <div class="editor-field">
                    <label>@Html.CheckBox("hideBricksContentCheckbox")Hide bricks content</label>
                </div>

                @Html.ActionLink("Manage Linkable Bricks", "Edit", "Scene", new { id = ViewBag.LinkableBricksSceneId }, null)
            </fieldset>

            <fieldset>
                <legend>Templates</legend>

                <div class="editor-field">
                    @Html.TextBox("templateTitle")
                    <input type="button" id="exportTemplateButton" value="Export Template" />
                </div>

                <div class="editor-field">
                    @Html.DropDownList("templateSceneId", (SelectList)ViewBag.Templates)
                    <input type="button" id="applyTemplateButton" value="Apply Template" />
                </div>
            </fieldset>

            <div style='position:absolute; bottom: 0; display: @(linkableBricks ? "display:none" : "display:block")'>
                <span class="alter">
                    <input type="button" id="saveSceneButton" value="Save" />
                </span>
                @Html.ActionLink("View", "Details", "Community", new { id = ownerId }, new Dictionary<string, object> { { "id", "viewScene" } })
            </div>
        </div>

    </fieldset>

</div>

@{
    this.RenderStylesAndScripts();
}